PACKAGE
---------
In JAVA, a package is a way to organize related classes,interfaces,and other resources.
provides a mechanism for grouping related code together, makes it easier to maintain.
package helps to prevent naming conflict between classes.
provides a hierarchichal structure for locating and accessing classes.

keyword - package
Example - package com.example.mypackage
---------------------------------------------------------------------------------------------------------------------------------------
IMPORT
------
In JAVA, import keyword is used to bring classes, interfaces, and other members from other 
packages into your current Java file.

keyword - import
Example - import java.util.ArrayList;
ArrayList is a class
java.util is a package
---------------------------------------------------------------------------------------------------------------------------------------------------------------
CLASS
------
In Java, a class is a blueprint or a template for creating objects.
Defines the properties (attributes) and behaviors (methods) that objects of that class will have.

keyword - class "classname"
Example - class EXAMPLE
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
***PACKAGE would be like "Chapter" of a book
Class would be a "paragraph"
method would be "sentence"***
----------------------------------------------
METHOD
-------
In Java, a method is a collection of statements that are grouped together to perform a specific task.

keyword - method_name() 
Example - addNumbers()

--------------------------------------------------------------------------------------------------------------------------
abstract - Used to declare abstract classes or methods. 
abstract class - Animal{}
abstract method -  abstract void sound();
-----------------------------------------------------------------------------------------------------------------------------------------------------
assert - is used for program assertions to ensure certain conditions are true. It is primarily used for debugging and testing purposes.
assert <condition>
-----------------------------------------------------------------------------------------------------------------------------------------------------
break -  Used to exit a loop or switch statement prematurely. When encountered, the control flow immediately exits the loop or switch and continues with the next statement after the loop or switch.
break;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
byte - A keyword used to declare a byte variable that can hold integer values in the range of -128 to 127.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
case -  Used in switch statements to specify different cases or options to be evaluated.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
catch - Used in exception handling to catch and handle exceptions. It follows the try block and allows the programmer to define actions to be taken when a specific exception is thrown.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
char - A keyword used to declare a char variable that can hold a single character or Unicode value.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class: Used to declare a class in Java. Classes are the building blocks of Java programs and define the structure, behavior, and attributes of objects.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
const (deprecated): Previously used to declare constant variables, but it is no longer used in Java and has been deprecated.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
continue: Used to skip the current iteration of a loop and continue with the next iteration.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
default: Used in switch statements as the default case when none of the other cases match.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
do: Used to start a do-while loop, which executes a block of code repeatedly while a given condition is true.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
double: A keyword used to declare a double variable that can hold floating-point decimal values with double precision.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
else: Used in conditional statements to define an alternative block of code to be executed if the condition is false.

enum: Introduced in Java 5, enum is used to declare an enumerated type, which represents a fixed set of constants.

extends: Used to specify inheritance, indicating that a class is derived from another class (the superclass).

final: Used to declare a constant or make a variable, method, or class unchangeable or non-inheritable.

finally: Used in exception handling to define a block of code that is executed regardless of whether an exception is thrown or caught.

float: A keyword used to declare a float variable that can hold floating-point decimal values with single precision.

for: Used to create a for loop, which repeatedly executes a block of code for a specified number of times.

if: Used to perform conditional execution, executing a block of code if a specified condition is true.

implements: Used to indicate that a class is implementing one or more interfaces.

import: Used to import classes, interfaces, or packages from other packages into the current source file.

instanceof: Used to check if an object is an instance of a specific class or implements a specific interface.

int: A keyword used to declare an int variable that can hold integer values.

interface: Used to declare an interface, which is a collection of abstract methods and constants that define a contract for implementing classes.

long: A keyword used to declare a long variable that can hold larger integer values.

native: Used to declare a method as native, indicating that the method is implemented in a platform-specific language.

new: Used to create an instance (object) of a class or an array.

null: A literal that represents a null reference, indicating that a variable does not refer to any object.

package: Used to define a package, which is a way to organize related classes and interfaces.

private: An access modifier used to restrict access to members (variables and methods) to within the same class.

protected: An access modifier used to restrict access to members to within the same class, subclasses, and the same package.

public: An access modifier used to allow access to members from any class or package.

return: Used to exit a method and return a value (if the method has a return type).

short: A keyword used to declare a short variable that can hold smaller integer values.

static: Used to declare static members (variables, methods, blocks) that belong to the class itself, rather than individual instances.

strictfp: Used to ensure consistent floating-point behavior across different platforms.

super: Used to refer to the superclass (parent class) or to call its constructors and methods.

switch: Used to create a switch statement, which provides multiple execution paths based on the value of an expression.

synchronized: Used to create synchronized blocks or methods, ensuring that only one thread can access them at a time.

this: Used to refer to the current object within an instance method or constructor.

throw: Used to explicitly throw an exception within a method or block.

throws: Used in a method signature to indicate that the method can potentially throw certain exceptions.

transient: Used to indicate that a variable should not be serialized when an object is converted to a byte stream.

try: Used to define a block of code in which exceptions might occur and to associate exception handlers (catch blocks) with it.

void: A keyword used as the return type of a method to indicate that the method does not return any value.

volatile: Used to declare variables that are shared among multiple threads, ensuring consistent visibility and ordering of their values.

while: Used to create a while loop, which repeatedly executes a block of code while a specified condition is true.

